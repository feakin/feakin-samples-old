impl CinemaCreated {
    endpoint {
        POST "${uri}/post";
        request: Request;
        authorization: Basic "{{username}}" "{{password}}";
    }

    // created in ApplicationService
    flow {
        via UserRepository::getUserById() receive user: User
        // send "book.created" to Kafka
        via UserRepository::saveUser(user: User) receive void
        // or
        via UserRepository::save(user: User) receive user: User;
        // message queue
        via MessageQueue send CinemaCreated to "CinemaCreated"
        // http request
        via HTTP::post() send Message to "${uri}/post"
        // grpc Greeter
        via GRPC::Greeter send CinemaCreated to "CinemaCreated"
        // map filter
        when (isUserValid) {
            is true => {
                // do something
            }
            is false => {
                // do something
            }
        }
    }
}

var source: JavaSource {
    language: "Java";
    package: "com.phodal.coco";
}

def ContextMap {
    // todo: parser generator
    sample: String;
}
