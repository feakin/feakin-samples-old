impl CinemaCreated {
    endpoint {
        GET "/book/{id}";
        authorization: Basic admin admin;
        response: Cinema;
    }
}

impl CinemaUpdated {
    endpoint {
        POST "/book/{id}";
        request: CinemaUpdatedRequest;
        authorization: Basic admin admin;
        response: Cinema;
    }

    flow {
        via UserRepository.getUserById receive user: User
        via UserRepository.save(user: User) receive user: User
        via MessageQueue send CinemaCreated to "CinemaCreated"
    }
}

layered DDD {
    dependency {
        "interface" -> "application"
        "interface" -> "domain"
        "domain" -> "application"
        "application" -> "infrastructure"
        "interface" -> "infrastructure"
    }
    layer interface {
        package: "com.example.book"
    }
    layer domain {
        package: "com.example.domain"
    }
    layer application {
        package: "com.example.application"
    }
    layer infrastructure {
        package: "com.example.infrastructure"
    }
}

